/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lt.vinco.ebdimport;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPathExpressionException;
import lt.vinco.util.HibernateUtil;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.xml.sax.SAXException;

/**
 *
 * @author Vincas Batulevičius
 */
public class Langas extends javax.swing.JFrame {

    /**
     * Creates new form Langas
     */
    public Langas() {
        
     URL imgUrl = null;
        ImageIcon imgIcon = null;

        imgUrl = Langas.class.getResource("res/ico.gif");
        imgIcon = new ImageIcon(imgUrl);
        Image img = imgIcon.getImage();
        this.setIconImage(img);   
        
       
        
        initComponents();
        
     //   dir = new File("D:\\Procesai\\ebdimport\\savaites\\new\\split");
      //   txtDir.setText(dir.getAbsolutePath());
     chooser.setCurrentDirectory(new File(System.getProperty("user.home")));   
          jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lt/vinco/ebdimport/res/star.jpg"))); // NOI18N
setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        chooser = new javax.swing.JFileChooser();
        jLabel2 = new javax.swing.JLabel();
        txtDir = new javax.swing.JTextField();
        btnTest = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnB2 = new javax.swing.JButton();
        ckSukeitimais = new javax.swing.JCheckBox();
        btnRun = new javax.swing.JButton();
        ckDivision = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        ckRasytiDB = new javax.swing.JCheckBox();
        btnBeparent = new javax.swing.JButton();
        btnTrinti = new javax.swing.JButton();
        txtTrinti = new javax.swing.JTextField();
        btnGetidappli = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        btnConnection = new javax.swing.JButton();
        lblCon = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ST.36 duomenų įkėlimas");

        btnDir.setText("Nurodyti failą/aplanką");
        btnDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("ST.36 duomenų įkėlimas į VPB Europos patentų duomenų bazę (2020-06-30v - IVPK, log keitimus).  Su ankstesnėm versijom nedirbti!");

        jLabel2.setText("               ");

        txtDir.setEditable(false);
        txtDir.setText("Savaitinių ST.36 duomenų aplankas arba vienas failas");

        btnTest.setText("Test");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        btnB2.setText("B2");
        btnB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnB2ActionPerformed(evt);
            }
        });

        ckSukeitimais.setText("Su keitimais");
        ckSukeitimais.setEnabled(false);
        ckSukeitimais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckSukeitimaisActionPerformed(evt);
            }
        });

        btnRun.setText("Vykdyti B1");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        ckDivision.setSelected(TIK_DIVISION);
        ckDivision.setText("Tik naujus divisional patentus, kurie neturi parent patento");
        ckDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckDivisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckDivision)
                .addGap(40, 40, 40)
                .addComponent(ckSukeitimais)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnB2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(ckDivision)
                    .addComponent(ckSukeitimais))
                .addGap(18, 18, 18)
                .addComponent(btnB2)
                .addGap(52, 52, 52))
        );

        jPanel2.setBackground(new java.awt.Color(185, 209, 234));

        ckRasytiDB.setText("Rašyti į DB");
        ckRasytiDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckRasytiDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckRasytiDB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckRasytiDB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        btnBeparent.setText("B1 be parent");
        btnBeparent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeparentActionPerformed(evt);
            }
        });

        btnTrinti.setForeground(new java.awt.Color(255, 0, 51));
        btnTrinti.setText("x");
        btnTrinti.setToolTipText("Ar tikrai ištrinti?");
        btnTrinti.setEnabled(false);
        btnTrinti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrintiActionPerformed(evt);
            }
        });

        txtTrinti.setText("idappli");

        btnGetidappli.setText("idappli by doknr");
        btnGetidappli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetidappliActionPerformed(evt);
            }
        });

        jLabel3.setText("Programavo Vincas Batulevičius");

        btnConnection.setText("Connection");
        btnConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectionActionPerformed(evt);
            }
        });

        lblCon.setText("Connection...");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lt/vinco/ebdimport/res/vincasoft5.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(95, 95, 95))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnBeparent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtDir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnTrinti)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtTrinti, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnGetidappli)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnConnection)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(9, 9, 9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblCon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addContainerGap())))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDir)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBeparent)
                    .addComponent(lblCon))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTest)
                    .addComponent(btnTrinti)
                    .addComponent(txtTrinti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetidappli)
                    .addComponent(jLabel3)
                    .addComponent(btnConnection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDirActionPerformed
      chooser.setDialogTitle("Įkeliami failai");
    chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    chooser.setApproveButtonText("Pasirinkti");
//   chooser.setCurrentDirectory(new File("C:\\Users\\vbatulevicius\\Documents\\NetBeansProjects\\EBDimport_data\\"));
  // chooser.setCurrentDirectory(new File("C:\\"));
       //disable the "All files" option.
    chooser.setAcceptAllFileFilterUsed(false);
     
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
        
        

    dir = chooser.getSelectedFile();
    chooser.setCurrentDirectory(dir);
    txtDir.setText(dir.getAbsolutePath());
    
    }// if approve
  
    }//GEN-LAST:event_btnDirActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
     
        
 if (dir==null) {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
 
 if(!(dir.isDirectory() || dir.isFile()))
     {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
        try {
            EBDimport.createLogger();
       if(this.SU_KEITIMAIS)   {  EBDimport.createKeitLogger();
     //  EBDimport.logkeit.log(Level.INFO,"loginnu keitimus");
       }
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
  
         Workbook wb = new XSSFWorkbook();
     sheet = wb.createSheet("Visi");
     String savaite = "";
     
        if (dir.isDirectory()) {
      File[] files = dir.listFiles();  
      int viso = 0;
     int isviso = files.length;
    for (File f : files)
    {
             
 
      
  
  
        if (!EBDimport.getExtension(f).equalsIgnoreCase("xml") ) continue;
        
        
    
        
        
        savaite = f.getName().substring(3, 7);
        viso++;
        this.setTitle("Tvarkomas "+viso+"-as failas "+f.getName()+" iš "+isviso);
         
                try {
                    EBDimport.ImportFile(f);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                     JOptionPane.showMessageDialog(this, "ParserConfigurationException!",  "Vincas", JOptionPane.OK_OPTION);
      return;
                }
                 catch (FileNotFoundException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                     System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "Tikriausiai nėra DTD!",  "Vincas", JOptionPane.OK_OPTION);
      return;
                }
                
                         catch (SAXException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                     JOptionPane.showMessageDialog(this, "SAXException!",  "Vincas", JOptionPane.OK_OPTION);
      return;
                } 
                catch (IOException ex) {
                    System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "IOException!",  "Vincas", JOptionPane.OK_OPTION);              
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                } catch (XPathExpressionException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                     System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "XPathExpressionException!",  "Vincas", JOptionPane.OK_OPTION);
      return;
                } 
       
    
    }
    }
    else
    {
       if (!EBDimport.getExtension(dir).equalsIgnoreCase("xml") ) {
           JOptionPane.showMessageDialog(this, "Turi būti XML failas!",  "Vincas", JOptionPane.OK_OPTION);
           return;}
              
            try {
                EBDimport.ImportFile(dir);
                savaite = dir.getName().substring(3, 7);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            }  catch (FileNotFoundException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                 JOptionPane.showMessageDialog(this, "Tikriausiai nėra DTD!",  "Vincas", JOptionPane.OK_OPTION);
      return;
            }
            
            catch (SAXException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (XPathExpressionException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            }
    
          }//else  
      try {
            FileOutputStream fileOut;
            if (RASYTI_DB) {
            fileOut = new FileOutputStream("EP_irasyti_i_DB_"+savaite+".xlsx");
            } else{
            fileOut = new FileOutputStream("EP_"+savaite+".xlsx");
            }
             wb.write(fileOut);
    fileOut.close();
    sheet = null;
    wb=null;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        }  
       EBDimport.log=null; 
        Toolkit.getDefaultToolkit().beep();
   JOptionPane.showMessageDialog(this, "Darbas baigtas!",  "Vincas", JOptionPane.OK_OPTION);     
   
    }//GEN-LAST:event_btnRunActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed

  
    String    extidpatent =   JOptionPane.showInputDialog(this ,"Extdpatent be EP (id, invs):");
       
    PatentasDB pd = EBDimport.YraDB(extidpatent); 
   
  JOptionPane.showMessageDialog(this, pd.getInvNames(),  "Vincas", JOptionPane.OK_OPTION);     
  
 
   if (true)     return;
        List<String> smallFilesLines;  
        try {
            smallFilesLines = Files.readAllLines(  FileSystems.getDefault().getPath("xx0.txt"), StandardCharsets.UTF_8);
for (String oneLine : smallFilesLines) {
    PatentasDB pdb = EBDimport.YraDB(oneLine);
  //  Trinti.DeleteFromDB(pdb.idappli);
   System.out.println(oneLine); 
}   
} catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        }
JOptionPane.showMessageDialog(this, "Testas baigtas",  "Vincas", JOptionPane.OK_OPTION);       
    
    }//GEN-LAST:event_btnTestActionPerformed

    private void ckDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckDivisionActionPerformed
        // TODO add your handling code here:
        
        if(ckDivision.isSelected()) TIK_DIVISION =true; else TIK_DIVISION = false;
        //JOptionPane.showMessageDialog(this, ckDivision.isSelected());
    }//GEN-LAST:event_ckDivisionActionPerformed

    private void ckRasytiDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckRasytiDBActionPerformed
       if(ckRasytiDB.isSelected()) {RASYTI_DB =true;
       ckRasytiDB.setForeground(Color.red);
       Font newCheckBoxFont=new Font(ckRasytiDB.getFont().getName(), Font.BOLD,ckRasytiDB.getFont().getSize());
       ckRasytiDB.setFont(newCheckBoxFont);
       } else {RASYTI_DB = false; 
        ckRasytiDB.setForeground(Color.black);
         Font newCheckBoxFont=new Font(ckRasytiDB.getFont().getName(), Font.PLAIN,ckRasytiDB.getFont().getSize());
         ckRasytiDB.setFont(newCheckBoxFont);
       }
      // JOptionPane.showMessageDialog(this,  RASYTI_DB);
    }//GEN-LAST:event_ckRasytiDBActionPerformed

    private void btnB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnB2ActionPerformed
        
       if (dir==null) {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
 
 if(!(dir.isDirectory() || dir.isFile()))
     {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
        try {
            B2.createLogger();
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(),  "Vincas", JOptionPane.OK_OPTION);
        }
    
        Workbook wb = new XSSFWorkbook();
     sheet = wb.createSheet("B2");
     String savaite = "";
        
        if (dir.isDirectory()) {
      File[] files = dir.listFiles();  
      int viso = 0;
     int isviso = files.length;
    for (File f : files)
    {
             
       
        if (!EBDimport.getExtension(f).equalsIgnoreCase("xml") ) continue;
        savaite = f.getName().substring(3, 7);
        viso++;
        this.setTitle("Tvarkomas "+viso+"-as failas "+f.getName()+" iš "+isviso);
      // txtInfo.setText("Tvarkomas "+viso+"-as failas "+f.getName()+" iš "+isviso);
     //  txtInfo.update(txtInfo.getGraphics());
        
                try {
                    B2.ImportB2(f);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SAXException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "Tikriausiai nėra DTD!",  "Vincas", JOptionPane.OK_OPTION);              
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                } catch (XPathExpressionException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                }
         }
    }
    else
    {
       if (!EBDimport.getExtension(dir).equalsIgnoreCase("xml") ) {
           JOptionPane.showMessageDialog(this, "Turi būti XML failas!",  "Vincas", JOptionPane.OK_OPTION);
           return;}
              
            try {
                savaite = dir.getName().substring(3, 7);
                B2.ImportB2(dir);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                 System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "Tikriausiai nėra DTD!",  "Vincas", JOptionPane.OK_OPTION); 
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (XPathExpressionException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            }
    
          }//else  
       try {
            FileOutputStream fileOut;
            if (RASYTI_DB) {
            fileOut = new FileOutputStream("B2_irasyti_i_DB_"+savaite+".xlsx");
            } else{
            fileOut = new FileOutputStream("B2_"+savaite+".xlsx");
            } 
            
            
             wb.write(fileOut);
    fileOut.close();
    sheet = null;
    wb=null;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        }  
      B2.log=null;  
        Toolkit.getDefaultToolkit().beep();
   JOptionPane.showMessageDialog(this, "Darbas baigtas!",  "Vincas", JOptionPane.OK_OPTION);   
        
    }//GEN-LAST:event_btnB2ActionPerformed

    private void ckSukeitimaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckSukeitimaisActionPerformed
        if(ckSukeitimais.isSelected()) {SU_KEITIMAIS =true;
       } else {SU_KEITIMAIS = false; }
        
     //  JOptionPane.showMessageDialog(this,  SU_KEITIMAIS);
    }//GEN-LAST:event_ckSukeitimaisActionPerformed

    private void btnBeparentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeparentActionPerformed
        
             
 if (dir==null) {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
 
 if(!(dir.isDirectory() || dir.isFile()))
     {JOptionPane.showMessageDialog(this, "Nenurodytas failas arba aplankas!",  "Vincas", JOptionPane.OK_OPTION);   return;}
        try {
            B1beparent.createLogger();
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(),  "Vincas", JOptionPane.OK_OPTION);
        }
     Workbook wb = new XSSFWorkbook();
     sheet = wb.createSheet("Div be par");
     String savaite = "";
        if (dir.isDirectory()) {
      File[] files = dir.listFiles();  
      int viso = 0;
     int isviso = files.length;
    for (File f : files)
    {
             
       
        if (!EBDimport.getExtension(f).equalsIgnoreCase("xml") ) continue;
        
        viso++;
        savaite = f.getName().substring(3, 7);
        
        this.setTitle("Tvarkomas "+viso+"-as failas "+f.getName()+" iš "+isviso);
      // txtInfo.setText("Tvarkomas "+viso+"-as failas "+f.getName()+" iš "+isviso);
     //  txtInfo.update(txtInfo.getGraphics());
        
                try {
                    B1beparent.TestFile(f);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SAXException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    System.out.println("Nera dtd!");
      JOptionPane.showMessageDialog(this, "Tikriausiai nėra DTD!",  "Vincas", JOptionPane.OK_OPTION);              
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                } catch (XPathExpressionException ex) {
                    Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
                }
                  
    
    
    }
    }
    else
    {
       if (!EBDimport.getExtension(dir).equalsIgnoreCase("xml") ) {
           JOptionPane.showMessageDialog(this, "Turi būti XML failas!",  "Vincas", JOptionPane.OK_OPTION);
           return;}
              
            try {
                savaite = dir.getName().substring(3, 7);
                B1beparent.TestFile(dir);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (XPathExpressionException ex) {
                Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
            }
    
          }//else   
        
        
        try {
            FileOutputStream fileOut;
            fileOut = new FileOutputStream("Div_be_par"+savaite+".xlsx");
             wb.write(fileOut);
    fileOut.close();
    sheet = null;
    wb=null;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Langas.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        B1beparent.log=null;
        Toolkit.getDefaultToolkit().beep();
   JOptionPane.showMessageDialog(this, "Darbas baigtas!", "Vincas", JOptionPane.OK_OPTION);     
     
        
        
        
        
    }//GEN-LAST:event_btnBeparentActionPerformed

    private void btnTrintiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrintiActionPerformed
       
          String message = "Ar tikrai ištrinti?";
    String title = "Vincas";
      int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
    if (reply != JOptionPane.YES_OPTION)
    {
    return;
    }
        
        
        String idappli = txtTrinti.getText().trim();
        if(!idappli.contains("X")) { JOptionPane.showMessageDialog(this, "Neteisingas idappli!",  "Vincas", JOptionPane.OK_OPTION);
        return;
        }
        if(idappli.length()<6) { JOptionPane.showMessageDialog(this, "Neteisingas idappli!",  "Vincas", JOptionPane.OK_OPTION);
        return;
        }
        Trinti.DeleteFromDB(idappli);
        JOptionPane.showMessageDialog(this, "Ištrinta!");
    }//GEN-LAST:event_btnTrintiActionPerformed

    private void btnGetidappliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetidappliActionPerformed
      String doknr = txtTrinti.getText().trim();
      if ((doknr==null) || (doknr.length()<6)|| doknr.contains("EP")) {
      JOptionPane.showMessageDialog(this, "Neteisingas EP nr. Turi būti be EP!",  "Vincas", JOptionPane.OK_OPTION);
      return;
      }
        PatentasDB pdb = EBDimport.YraDB(doknr);
       if(pdb.YraDB) {txtTrinti.setText(pdb.idappli);
       }
       else   txtTrinti.setText("idappli");
        
    }//GEN-LAST:event_btnGetidappliActionPerformed

    private void btnConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectionActionPerformed
           
     Session session = null; 

        try {
             session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
      Connection connection = session.connection();
DatabaseMetaData metaData = connection.getMetaData();
System.out.println(metaData.getURL()); 

JOptionPane.showMessageDialog(this, metaData.getURL(),  "Vincas", JOptionPane.INFORMATION_MESSAGE);

lblCon.setText(metaData.getURL());
        
  session.getTransaction().commit();
       
    } catch (HibernateException he) {
        he.printStackTrace();
         session.getTransaction().rollback();
     }
  catch (SQLException se) {
        se.printStackTrace();
         session.getTransaction().rollback();
     }      
  finally{
    session.flush();
    session.close();
 }     
           
       
        
    }//GEN-LAST:event_btnConnectionActionPerformed

    
    
 private String readFile(String pathname) throws IOException {

    File file = new File(pathname);
    StringBuilder fileContents = new StringBuilder((int)file.length());
    Scanner scanner = new Scanner(file);
    String lineSeparator = System.getProperty("line.separator");

    try {
        while(scanner.hasNextLine()) {        
            fileContents.append(scanner.nextLine() + lineSeparator);
        }
        return fileContents.toString();
    } finally {
        scanner.close();
    }
}    
    
     
 
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Langas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Langas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Langas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Langas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Langas().setVisible(true);
            }
        });
    }

    
    
    
    private File Xmlsource = null;
private File Xmlresultdir = null;
    private File dir = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnB2;
    private javax.swing.JButton btnBeparent;
    private javax.swing.JButton btnConnection;
    private javax.swing.JButton btnDir;
    private javax.swing.JButton btnGetidappli;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton btnTrinti;
    private javax.swing.JFileChooser chooser;
    private javax.swing.JCheckBox ckDivision;
    private javax.swing.JCheckBox ckRasytiDB;
    private javax.swing.JCheckBox ckSukeitimais;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCon;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtTrinti;
    // End of variables declaration//GEN-END:variables


    public static boolean TIK_DIVISION = false;
    public static boolean RASYTI_DB = false; 
     public static boolean SU_KEITIMAIS = false; 
public static  Sheet sheet = null;
}
